import { Database } from '@glenna/common'
import { SlashSubcommand } from '../../Command.js'

export default new SlashSubcommand({
    name: 'add',
    builder: (a) => a.setDescription('Add a member to a team.')
        .addUserOption(option =>
            option.setName('member')
                .setDescription('Member to add.')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('team')
                .setDescription('Team to add to.')
                .setRequired(true)
                .setAutocomplete(true))
        ,
    async execute(interaction){
        const sourceGuild = interaction.guild
        if(!sourceGuild){
            await interaction.reply({
                ephemeral: true,
                content: `This command must be executed in a guild.`
            })
            return
        }
        const guild = await Database.Client.guild.findUnique({ where: { snowflake: BigInt(sourceGuild.id) }})
        if(!guild){
            await interaction.reply({
                ephemeral: true,
                content: `I couldn't find your guild in my notes.`
            })
            return
        }

        const member = interaction.options.getUser('member', true)
        const teamName = interaction.options.getString('team', true)
        const team = await Database.Client.teamLookup // TODO
    }
})
